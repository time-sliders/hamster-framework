<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:baymax="http://baymax.tongbanjie.com/schema/baymax-3.0"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
   	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd 
   	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
   	http://baymax.tongbanjie.com/schema/baymax-3.0 http://baymax.tongbanjie.com/schema/baymax-3.0.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- tbj_fund_dataSource -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.druid.url}"/>
        <property name="username" value="${jdbc.druid.user}"/>
        <property name="password">
            <bean class="com.noob.storage.security.EncryptDBPasswordFactory">
                <property name="password" value="${jdbc.druid.password}"/>
            </bean>
        </property>
        <property name="filters" value="${jdbc.druid.filters}"/>
        <property name="maxActive" value="${jdbc.druid.maxActive}"/>
        <property name="initialSize" value="${jdbc.druid.initialSize}"/>
        <property name="maxWait" value="${jdbc.druid.maxWait}"/>
        <property name="minIdle" value="${jdbc.druid.minIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.druid.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.druid.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.druid.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.druid.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.druid.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.druid.testOnReturn}"/>
        <property name="poolPreparedStatements" value="${jdbc.druid.poolPreparedStatements}"/>
        <property name="maxOpenPreparedStatements" value="${jdbc.druid.maxOpenPreparedStatements}"/>
    </bean>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <!-- 配置事务管理器，注意这里的dataSource和SqlSessionFactoryBean的dataSource要一致，不然事务就没有作用了 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- myBatis文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:META-INF/mybatis/mybatis-configuration.xml"/>
        <property name="mapperLocations" value="classpath*:META-INF/mybatis/mapper/*.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

</beans>
